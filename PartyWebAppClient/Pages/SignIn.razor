@page "/signin"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject IToastService ToastService

@using PartyWebAppCommon.Models

<PageTitle>PartyWebApp - Sign In</PageTitle>

<h1 class="text-center mt-4">Sign In</h1>

<div style="display: flex; justify-content: center; align-items: center; width: 100%">
    <EditForm Model="@model" OnValidSubmit="@OnValidSubmit" FormName="SignInForm" style="width: 300px;">
        <DataAnnotationsValidator />
        @* <ValidationSummary /> *@

        <FluentStack Orientation="Orientation.Vertical">
            <div style="width: 100%;">
                <FluentTextField @bind-Value="model.Email" Label="Email" Placeholder="Email" Style="width: 100%;" />
                <FluentValidationMessage For="@(() => model.Email)" />
            </div>
            <div style="width: 100%;">
                <FluentTextField @bind-Value="model.Password" Label="Password" Placeholder="Password" Type="password"
                    Style="width: 100%;" />
                <FluentValidationMessage For="@(() => model.Password)" />
            </div>

            <FluentButton Style="width: 100%" IconStart="@(new Icons.Regular.Size16.PersonArrowRight())"
                Loading="@loading" Type="Microsoft.FluentUI.AspNetCore.Components.ButtonType.Submit"
                Appearance="Appearance.Accent">
                Sign In</FluentButton>
        </FluentStack>
    </EditForm>
</div>

@code {
    private SignInModel model = new SignInModel();
    private bool loading = false;

    private async Task OnValidSubmit()
    {
        if (loading) return;

        loading = true;

        var response = await UserService.SignInAsync(model);

        if (!response.IsSuccess) ToastService.ShowError(response.ErrorMessage ?? "An error occurred while signing in.");
        else NavigationManager.NavigateTo("/dashboard", true);

        loading = false;
    }
}
