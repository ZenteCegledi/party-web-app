@attribute [Authorize]

@using PartyWebAppClient.Components.Dashboard
@using PartyWebAppCommon.DTOs

<AuthorizeView>
	<Modal @ref="DepositModal" Title="Deposit Modal">
		<BodyTemplate>
			This is the Deposit Modal
		</BodyTemplate>
		<FooterTemplate>
			<Button Color="ButtonColor.Secondary" @onclick="() => HideModal(DepositModal)">Close</Button>
			<Button Color="ButtonColor.Primary">Save</Button>
		</FooterTemplate>
	</Modal>

	<Modal @ref="WithdrawModal" Title="Withdraw Modal">
		<BodyTemplate>
			This is the Withdraw Modal
		</BodyTemplate>
		<FooterTemplate>
			<Button Color="ButtonColor.Secondary" @onclick="() => HideModal(WithdrawModal)">Close</Button>
			<Button Color="ButtonColor.Primary">Save</Button>
		</FooterTemplate>
	</Modal>

	<Modal @ref="CreateWalletModal" Title="Create Wallet Modal">
		<BodyTemplate>
			This is the Create Wallet Modal
		</BodyTemplate>
		<FooterTemplate>
			<Button Color="ButtonColor.Secondary" @onclick="() => HideModal(CreateWalletModal)">Close</Button>
			<Button Color="ButtonColor.Primary">Save</Button>
		</FooterTemplate>
	</Modal>

	<FluentCard>
		<div class="w-100 d-flex justify-content-between">
			<div>
				<h3 class="font-monospace">
					<i>Your</i> Wallets
				</h3>

				@if (wallets.Count == 0)
				{
					<p class="text-black-50">You don't have any wallets yet, you need to create one to start using the app.
					</p>
				}

				@foreach (WalletDto wallet in wallets)
				{
					<FluentButton Appearance="Appearance.Lightweight" Id="@wallet.Currency.ToString()"
						BackgroundColor="@(chosenWallet == wallet ? "var(--neutral-fill-stealth-hover)" : "")"
						@onclick="() => { chosenWallet = wallet; }">
						<img alt="@wallet.Currency" class="rounded-circle" height="20"
							src="@currencyMap[wallet.Currency].image" style="object-fit: cover" width="20" />
						@wallet.Currency
					</FluentButton>
				}
			</div>

			<div>
				<FluentButton IconStart="@(new Icons.Regular.Size20.Wallet())" OnClick="() => ShowModal(DepositModal)">
					Add Wallet
				</FluentButton>
			</div>
		</div>
	</FluentCard>

	@if (chosenWallet != null)
	{
		<FluentCard class="mt-4" Height="300px" Width="100%">
			<div class="d-flex justify-content-between flex-column h-100">
				<div class="w-100 d-flex justify-content-between">
					<img alt="@chosenWallet.Currency" class="rounded-circle" height="75"
						src="@currencyMap[chosenWallet.Currency].image" style="object-fit: cover" width="75" />

					<div class="d-flex gap-2">
						<FluentButton Appearance="Appearance.Lightweight" IconStart="@(new Icons.Regular.Size24.ArrowUp())">
						</FluentButton>
						<FluentButton Appearance="Appearance.Lightweight"
							IconStart="@(new Icons.Regular.Size24.ArrowDown())">
						</FluentButton>
					</div>
				</div>

				<div>
					<h1 class="mb-0 font-monospace">@chosenWallet.Amount</h1>
					<h3 class="text-black-50 fw-lighter">@currencyMap[chosenWallet.Currency].symbol - @chosenWallet.Currency
					</h3>
				</div>

			</div>
		</FluentCard>
	}
</AuthorizeView>