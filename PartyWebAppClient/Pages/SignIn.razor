@page "/signin"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<PageTitle>PartyWebApp - Sign In</PageTitle>

<h1 class="text-center mt-4">Sign In</h1>

<div style="display: flex; justify-content: center; align-items: center; width: 100%">
    <EditForm Model="@model" OnValidSubmit="@OnValidSubmit" FormName="SignInForm" style="width: 300px;">
        <DataAnnotationsValidator />
        @* <ValidationSummary /> *@

        <FluentStack Orientation="Orientation.Vertical">
            <div style="width: 100%;">
                <FluentTextField @bind-Value="model.Email" Label="Email" Placeholder="Email" Style="width: 100%;" />
                <FluentValidationMessage For="@(() => model.Email)" />
            </div>
            <div style="width: 100%;">
                <FluentTextField @bind-Value="model.Password" Label="Password" Placeholder="Password" Type="password"
                    Style="width: 100%;" />
                <FluentValidationMessage For="@(() => model.Password)" />
            </div>

            <FluentButton Style="width: 100%" IconStart="@(new Icons.Regular.Size16.PersonArrowRight())"
                Loading="@loading" Type="Microsoft.FluentUI.AspNetCore.Components.ButtonType.Submit"
                Appearance="Appearance.Accent">
                Sign In
            </FluentButton>

            <FluentButton Style="width: 100%" OnClick="@ShowToast" Appearance="Appearance.Neutral">
                Test Toast
            </FluentButton>
        </FluentStack>
    </EditForm>
</div>

@code {
    private SignInModel model = new SignInModel();
    private bool loading = false;

    private void ShowToast()
    {
        ToastService.ShowToast(ToastIntent.Success, "Sign in successful!");
    }

    private async Task OnValidSubmit()
    {
        loading = true;
        await Task.Delay(1000);
        loading = false;

        NavigationManager.NavigateTo("/dashboard");

        @* var response = await Http.PostAsJsonAsync("api/auth/signin", model); *@
    }
}
