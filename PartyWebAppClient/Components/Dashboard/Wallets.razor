@attribute [Authorize]
@inject IStringLocalizer<Resources> Localize;

@using PartyWebAppCommon.DTOs
@using PartyWebAppCommon.Enums

<AuthorizeView>
	<Modal @ref="PrimaryModal">
		<HeaderTemplate>
			<div class="d-flex align-items-center gap-2">
				<img alt="@chosenWallet.Currency" class="rounded-circle" height="30"
					src="@currencyMap[chosenWallet.Currency].image" style="object-fit: cover" width="30" />
				<h4 class="font-monospace m-0">Setting Primary Wallet</h4>
			</div>
		</HeaderTemplate>
		<FooterTemplate>
			<FluentButton IconStart="@(new Icons.Regular.Size20.Star())" @onclick="SetPrimary"
				Loading="@modalSubmitting">
				Set</FluentButton>
		</FooterTemplate>
	</Modal>

	<Modal @ref="DepositModal">
		<HeaderTemplate>
			<div class="d-flex align-items-center gap-2">
				<img alt="@chosenWallet.Currency" class="rounded-circle" height="30"
					src="@currencyMap[chosenWallet.Currency].image" style="object-fit: cover" width="30" />
				<h4 class="font-monospace m-0">@Localize["Deposit"]</h4>
			</div>
		</HeaderTemplate>
		<BodyTemplate>
			<p class="mb-1"><b><i>@currencyMap[chosenWallet.Currency].symbol</i></b> - @Localize["Amount"]:</p>
			<FluentNumberField @bind-Value="depositAmount" Min="1" class="w-100" />
		</BodyTemplate>
		<FooterTemplate>
			<FluentButton IconStart="@(new Icons.Regular.Size20.Delete())" @onclick="() => HideModal(DepositModal)"
				Loading="@modalSubmitting">
				@Localize["Close"]</FluentButton>
			<FluentButton IconStart="@(new Icons.Regular.Size20.ArrowUp())" @onclick="Deposit"
				Loading="@modalSubmitting">
				@Localize["Deposit"]</FluentButton>
		</FooterTemplate>
	</Modal>

	<Modal @ref="WithdrawModal">
		<HeaderTemplate>
			<div class="d-flex align-items-center gap-2">
				<img alt="@chosenWallet.Currency" class="rounded-circle" height="30"
					src="@currencyMap[chosenWallet.Currency].image" style="object-fit: cover" width="30" />
				<h4 class="font-monospace m-0">@Localize["Withdraw"]</h4>
			</div>
		</HeaderTemplate>
		<BodyTemplate>
			<p class="mb-1"><b><i>@currencyMap[chosenWallet.Currency].symbol</i></b> - @Localize["Amount"]:</p>
			<FluentNumberField @bind-Value="withdrawAmount" Min="1" class="w-100" />
		</BodyTemplate>
		<FooterTemplate>
			<FluentButton IconStart="@(new Icons.Regular.Size20.Delete())" @onclick="() => HideModal(WithdrawModal)"
				Loading="@modalSubmitting">
				@Localize["Close"]</FluentButton>
			<FluentButton IconStart="@(new Icons.Regular.Size20.ArrowDown())" @onclick="Withdraw"
				Loading="@modalSubmitting">
				@Localize["Withdraw"]</FluentButton>
		</FooterTemplate>
	</Modal>

	<Modal @ref="CreateWalletModal">
		<HeaderTemplate>
			<div class="d-flex align-items-center gap-2">
				<FluentIcon Value="@(new Icons.Regular.Size28.AddCircle())" />
				<h4 class="font-monospace m-0">@Localize["CreateWallet"]</h4>
			</div>
		</HeaderTemplate>
		<BodyTemplate>
			<FluentStack Orientation="Orientation.Vertical" Width="100%">
				<div class="w-100">
					<p class="mb-1">@Localize["Currency"]:</p>
					<FluentSelect Style="width: 100%;" name="class" Id="currency" @bind-Value="@CreateWalletCurrency"
						TOption="CurrencyType">
						<FluentOption Value="">@Localize["SelectCurrency"] ...</FluentOption>

						@foreach (CurrencyType currency in CreateWalletCurrencyOptions)
						{
							<FluentOption Value="@currency.ToString()">
								<img alt="@currency" class="rounded-circle" height="20" src="@currencyMap[currency].image"
									style="object-fit: cover" width="20" />

								<b><i>@currency</i></b>
							</FluentOption>
						}
					</FluentSelect>
				</div>
				<div class="w-100">
					<p class="mb-1">@Localize["Amount"]:</p>

					<FluentNumberField class="w-100" Name="amount" @bind-Value="@CreateWalletAmount" Min="1" />
				</div>
			</FluentStack>
		</BodyTemplate>
		<FooterTemplate>
			<FluentButton @onclick="() => HideModal(CreateWalletModal)" IconStart="@(new Icons.Regular.Size20.Delete())"
				Loading="@modalSubmitting">Cancel</FluentButton>
			<FluentButton @onclick="CreateWallet" IconStart="@(new Icons.Regular.Size20.Save())"
				Loading="@modalSubmitting">
				@Localize["CreateWallet"]
			</FluentButton>
		</FooterTemplate>
	</Modal>

	<FluentCard>
		<div class="w-100 d-flex justify-content-between">
			<div>
				<h3 class="font-monospace">
					<i>@Localize["Your"]</i> @Localize["Wallets2"]
				</h3>

				@if (wallets.Count == 0)
				{
					<p class="text-black-50">@Localize["DontHaveWallets"]
					</p>
				}

				@foreach (WalletDto wallet in wallets)
				{
					<FluentButton Appearance="Appearance.Lightweight" Id="@wallet.Currency.ToString()"
						BackgroundColor="@(chosenWallet == wallet ? "var(--neutral-fill-stealth-hover)" : "")"
						@onclick="() => { chosenWallet = wallet; }">
						<img alt="@wallet.Currency" class="rounded-circle" height="20"
							src="@currencyMap[wallet.Currency].image" style="object-fit: cover" width="20" />
						@wallet.Currency
					</FluentButton>
				}
			</div>

			<div>
				<FluentButton IconStart="@(new Icons.Regular.Size20.Wallet())" OnClick=@(() =>
					{
						if (wallets.Count == 4) ToastService.ShowError(@Localize["YouAlreadyHaveAllWallets"]);
						else ShowModal(CreateWalletModal);
					})>
					@Localize["AddWallet"]
				</FluentButton>
			</div>
		</div>
	</FluentCard>

	@if (chosenWallet != null && wallets.Count > 0)
	{
		<FluentCard class="mt-4" Height="300px" Width="100%">
			<div class="d-flex justify-content-between flex-column h-100">
				<div class="w-100 d-flex justify-content-between">
					<img alt="@chosenWallet.Currency" class="rounded-circle" height="75"
						src="@currencyMap[chosenWallet.Currency].image" style="object-fit: cover" width="75" />

					<div class="d-flex gap-2">
						<FluentButton Appearance="Appearance.Lightweight" IconStart="@(new Icons.Regular.Size24.ArrowUp())"
							@onclick="() => ShowModal(DepositModal)" />
						<FluentButton Appearance="Appearance.Lightweight"
							IconStart="@(new Icons.Regular.Size24.ArrowDown())" @onclick="() => ShowModal(WithdrawModal)" />
					</div>
				</div>

				<div class="d-flex w-100 justify-content-between align-items-end">
					<div>
						<h1 class="mb-0 font-monospace">@chosenWallet.Amount</h1>
						<h3 class="text-black-50 fw-lighter">@currencyMap[chosenWallet.Currency].symbol -
							@chosenWallet.Currency</h3>
					</div>
					<div class="d-flex flex-column gap-2">
						<FluentButton IconStart="@(new Icons.Regular.Size20.Star())"
							@onclick="() => ShowModal(PrimaryModal)">
							Make Default
						</FluentButton>
					</div>
				</div>
			</div>
		</FluentCard>
	}
</AuthorizeView>